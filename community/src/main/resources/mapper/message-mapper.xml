<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chen.community.dao.MessageMapper">

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>


    <select id="selectConversations" resultType="com.chen.community.entity.Message">
        SELECT
        <include refid="selectFields">
        </include>
        FROM message
        where id in (
            SELECT max(id) FROM message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationsCount" resultType="java.lang.Integer">
        select count(m.maxid) from
        (
            SELECT max(id)  as maxid FROM `message`
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
            ) as m
    </select>

    <select id="selectLetters" resultType="com.chen.community.entity.Message">
        select
        <include refid="selectFields">
        </include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLettersCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLettersUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectLatestNotice" resultType="com.chen.community.entity.Message">
        select
        <include refid="selectFields">
        </include>
        from message
        where to_id = #{userId}
        and status != 2
        and from_id = 1
        and conversation_id = #{topic}
        order by create_time desc
        limit 1
    </select>

    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id) from message
        where from_id = 1
        and status != 2
        and to_id = #{userId}
        and conversation_id = #{topic}
    </select>

    <select id="selectUnreadNoticeCount" resultType="java.lang.Integer">
        select count(id) from message
        where from_id = 1
        and status = 0
        and to_id = #{userId}
            <if test="topic!=null">
                and conversation_id = #{topic}
            </if>
    </select>

    <select id="selectNotices" resultType="com.chen.community.entity.Message">
        select
        <include refid="selectFields">
        </include>
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <insert id="insertMessage" parameterType="com.chen.community.entity.Message" keyProperty="id">
        insert into message (<include refid="insertFields"></include>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>


    <update id="updateStatus">
        update message set status = #{status}
        where id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
    </update>
</mapper>