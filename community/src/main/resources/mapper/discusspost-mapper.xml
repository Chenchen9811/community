<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chen.community.dao.DiscussPostMapper">

    <sql id="selectFields">
        id, user_id, title, content, type, status, create_time, comment_count, score
    </sql>

    <sql id="insertFields">
        user_id, title, content, type, status, create_time, comment_count, score
    </sql>

    <insert id="insertDiscussPost" parameterType="DiscussPost" keyProperty="id">
        insert into discuss_post (<include refid="insertFields"></include>)
        values (#{userId}, #{title}, #{content}, #{type}, #{status}, #{createTime}, #{commentCount}, #{score})
    </insert>

    <!--方法返回值中的List这里能够自动检测到，因此只需要写返回值的类就行-->
    <!--查询帖子，帖子的状态不能是拉黑的状态，并且按照类型倒叙排序，也就是置顶的在前面，如果类型相同则按创建时间排序，最新创建的就排在前面-->
    <!--offset和limit是分页参数-->
    <select id="selectDiscussPosts" resultType="com.chen.community.entity.DiscussPost">
        select
        <include refid="selectFields">
        </include>
        from discuss_post
        where status != 2
        <if test="userId!=0"> <!--如果userId != 0那么就拼下面这个语句-->
            and user_id = #{userId}
        </if>
        <if test="orderMode == 0">
            order by type desc, create_time desc
        </if>
        <if test="orderMode == 1">
            order by type desc, score desc, create_time desc
        </if>
        limit #{offset}, #{limit}
    </select>

    <select id="selectAllDiscussPostRows" resultType="int">
        select count(id)
        from discuss_post
        where status != 2
        <if test="userId!=0"> <!--如果userId != 0那么就拼下面这个语句-->
            and user_id = #{userId}
        </if>
    </select>


    <select id="selectDiscussPostById" resultType="com.chen.community.entity.DiscussPost">
        select <include refid="selectFields"></include>
        from discuss_post
        where id = #{id}
    </select>
    <select id="selectUserIdByDiscussPostId" resultType="java.lang.Integer">
        select user_id from discuss_post
        where id = #{discussPostId};
    </select>

    <update id="updateDiscussPostCommentCount">
        update discuss_post set comment_count = #{commentCount}
        where id = #{id}
    </update>

    <update id="updateDiscussPostType">
        update discuss_post set  type = #{type}
        where id = #{id}

    </update>

    <update id="updateDiscussPostStatus">
        update discuss_post set  status = #{status}
        where id = #{id}
    </update>

    <update id="updateDiscussPostScore">
        update discuss_post set  score = #{score}
        where id = #{id}
    </update>
</mapper>